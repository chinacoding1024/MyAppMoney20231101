package ${package.Controller};

import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import com.stu.base.result.*;
import org.springframework.web.bind.annotation.PathVariable;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import java.util.List;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    /***********************************
     * 用途说明:新增或者更新
     * 更多内容:公众号 小明的学习圈子 https://www.stucoding.com/
     * @param ${table.entityPath}
     * 返回值说明:
     * @return R
     ***********************************/
    @PostMapping("/saveOrUpdate")
    public R saveOrUpdate(@RequestBody ${entity} ${table.entityPath}){
        boolean result= ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        if(result){
            return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
        }else{
            return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
        }
    }


    /***********************************
     * 用途说明:新增
     * @param ${table.entityPath}
     * 返回值说明:
     * @return R
     ***********************************/
    @PostMapping("add")
    public R add(@RequestBody ${entity} ${table.entityPath}){
        boolean result= ${table.entityPath}Service.save(${table.entityPath});
        if(result){
            return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
        }else{
            return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
        }
    }

    /***********************************
     * 用途说明:删除
     * @param id
     * 返回值说明:
     * @return R
     ***********************************/
    @DeleteMapping("/del/{id}")
    public R delete(@PathVariable String id){
        boolean result= ${table.entityPath}Service.removeById(id);
        if(result){
            return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
        }else{
            return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
        }
    }

    /***********************************
     * 用途说明:批量删除
     * @param ids
     * 返回值说明:
     * @return R
     ***********************************/
    @PostMapping("/del/batch")
    public R deleteBatch(@RequestBody List<String> ids){
        boolean result=  ${table.entityPath}Service.removeByIds(ids);
        if(result){
            return R.ok().message(ResultCodeEnum.SUCCESS.getMessage());
        }else{
            return R.error().message(ResultCodeEnum.UPDATE_ERROR.getMessage());
        }
    }

    /***********************************
     * 用途说明:取得所有对象
     * @param:
     * 返回值说明:
     * @return R
     ***********************************/
    @GetMapping
    public R findAll(){
        return  R.ok().data("data", ${table.entityPath}Service.list());
    }

    /***********************************
     * 用途说明:根据id取得对象
     * @param id
     * 返回值说明:
     * @return R
     ***********************************/
    @GetMapping("/{id}")
    public R findOne(@PathVariable String id){
        return R.ok().data("data", ${table.entityPath}Service.getById(id));
    }

    /***********************************
     * 用途说明:分页
     * @param pageNum pageSize ${table.entityPath}
     * 返回值说明:
     * @return  R
     ***********************************/
    @PostMapping("/page")
    public R findPage(@RequestParam Integer pageNum,
                      @RequestParam Integer pageSize,
                      @RequestBody ${entity} ${table.entityPath}){
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<>();
        queryWrapper.orderByDesc("id");
        return R.ok().data("data", ${table.entityPath}Service.page(new Page<>(pageNum,pageSize),queryWrapper));
    }
}

#end